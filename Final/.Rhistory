#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
Vans_Euclidean=as.matrix(Vans93[,2:6], rownames=1)
#Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean")
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
Vans_Euclidean=as.matrix(Vans93[,2:6], rownames=TRUE)
#Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean")
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#Vans_Euclidean=as.matrix(Vans93[,2:6], rownames="Model")
Vans_Euclidean = dist(as.matrix(Vans93[,2:6], rownames="Model"), method = "euclidean")
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#Vans_Euclidean=as.matrix(Vans93[,2:6], rownames="Model")
Vans_Euclidean = dist(as.matrix(Vans93[,2:6], rownames="Model"), method = "euclidean")
colnames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean")
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean")
colnames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean")
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#
Vans_Euclidean = matrix(dist(as.matrix(Vans93[,2:6]), method = "euclidean"), rows=9, byrow=T)
Vans_Euclidean = matrix(dist(as.matrix(Vans93[,2:6]), method = "euclidean"))
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#
Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean")
type(Vans_Euclidean)
Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean")
class(Vans_Euclidean)
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#
Vans_Euclidean = dist.to.matrix(dist(as.matrix(Vans93[,2:6]), method = "euclidean"))
Vans_Euclidean = dist(as.matrix(Vans93[,2:6]), method = "euclidean", upper=TRUE)
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#
Vans_Euclidean = matrix(dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE), nrow=9, byrow=TRUE)
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#
Vans_Euclidean=dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE)
Vans_Euclidean
Vans_Euclidean = matrix(Vans_Euclidean, nrow=9, byrow=TRUE)
Vans_Euclidean
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
#Vans_Euclidean = round(Vans_Euclidean, 2)
#Vans_Euclidean
#
Vans_Euclidean=dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE)
Vans_Euclidean
Vans_Euclidean = matrix(Vans_Euclidean, nrow=9, byrow=FALSE)
Vans_Euclidean
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
#Vans_Euclidean = round(Vans_Euclidean, 2)
#Vans_Euclidean
#
Vans_Euclidean=dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE)
Vans_Euclidean
Vans_Euclidean = matrix(print(Vans_Euclidean), nrow=9, byrow=FALSE)
Vans_Euclidean
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
#Vans_Euclidean = round(Vans_Euclidean, 2)
#Vans_Euclidean
#
Vans_Euclidean=dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE)
Vans_Euclidean
Vans_Euclidean = as.matrix(Vans_Euclidean)
Vans_Euclidean
#colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
#Vans_Euclidean = round(Vans_Euclidean, 2)
#Vans_Euclidean
#
Vans_Euclidean=dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE)
Vans_Euclidean
Vans_Euclidean = as.matrix(Vans_Euclidean)
Vans_Euclidean
colnames(Vans_Euclidean)<-Vans93[,1]
#rownames(Vans_Euclidean)<-Vans93[,1]
#Vans_Euclidean = round(Vans_Euclidean, 2)
#Vans_Euclidean
#
Vans_Euclidean=dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE)
Vans_Euclidean
Vans_Euclidean = as.matrix(Vans_Euclidean)
Vans_Euclidean
colnames(Vans_Euclidean)<-Vans93[,1]
rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#
Vans_Euclidean=dist(as.matrix(Vans93[,2:6]), method = "euclidean", diag=TRUE, upper=TRUE)
Vans_Euclidean = as.matrix(Vans_Euclidean)
colnames(Vans_Euclidean)<-Vans93[,1]
rownames(Vans_Euclidean)<-Vans93[,1]
Vans_Euclidean = round(Vans_Euclidean, 2)
Vans_Euclidean
#
Vans_Manhattan = as.matrix(dist(as.matrix(Vans93[,2:6]), method = "manhattan"))
colnames(Vans_Manhattan)<-Vans93[,1]
rownames(Vans_Manhattan)<-Vans93[,1]
Vans_Manhattan = round(Vans_Manhattan, 2)
Vans_Manhattan
library("readxl")
library("readxl")
setwd("C:/Users/gehmand/OneDrive - Carlisle Area School District/Desktop/Data 180 dTomGehman/DATA180/hw5")
vertebrate = read_csv("vertebrate.csv")
library("readxl")
setwd("C:/Users/gehmand/OneDrive - Carlisle Area School District/Desktop/Data 180 dTomGehman/DATA180/hw5")
vertebrate = read.csv("vertebrate.csv")
library("readxl")
setwd("C:/Users/gehmand/OneDrive - Carlisle Area School District/Desktop/Data 180 dTomGehman/DATA180/hw5")
vertebrate = read.csv("vertebrate.csv")
n(vertebrate)
library("readxl")
setwd("C:/Users/gehmand/OneDrive - Carlisle Area School District/Desktop/Data 180 dTomGehman/DATA180/hw5")
vertebrate = read.csv("vertebrate.csv")
nrow(vertebrate)
vertebrate
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euc_Complete = hclust(Ver_Euclidean, method="complete")
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euc_Complete = hclust(Ver_Euclidean)
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euclidean
#Ver_Euc_Complete = hclust(Ver_Euclidean)
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
dist(Ver_Euclidean[,1])
#Ver_Euc_Complete = hclust(Ver_Euclidean)
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euclidean
Ver_Euc_Complete = hclust(Ver_Euclidean)
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
Ver_Euc_Complete = hclust(Ver_Euclidean)
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euclidean
dist(Ver_Euclidean)
#Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
#Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
dist(Ver_Euclidean)
#Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
#Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
dist(Ver_Euclidean[,1])
#Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
#Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euclidean
dist(Ver_Euclidean[,1])
#Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
#Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
dist(Ver_Euclidean[,1])
dist(Ver_Euclidean
Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
dist(Ver_Euclidean[,1])
dist(Ver_Euclidean)
Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euclidean
dist(Ver_Euclidean[,1])
dist(Ver_Euclidean)
Ver_Euc_Complete = hclust(dist(Ver_Euclidean))
Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Euclidean
Ver_Euc_Complete = hclust(as.dist(Ver_Euclidean))
Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
Ver_Euc_Complete = hclust(as.dist(Ver_Euclidean), method="complete")
Ver_Euc_Complete
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
Ver_Eucl_Complete = hclust(as.dist(Ver_Euclidean), method="complete")
Ver_Eucl_Complete
Ver_Manhattan<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
plot(Ver_Eucl_Complete, lwd=3, title="Clustered vertabrates, Euclidean distance,\n complete linkage", ces.lab=1.25, xlab=Vertabrates, hang=-1, sub="")
plot(Ver_Eucl_Complete, lwd=3, title="Clustered vertabrates, Euclidean distance,\n complete linkage", ces.lab=1.25, xlab="Vertabrates", hang=-1, sub="")
plot(Ver_Eucl_Complete, lwd=3, title="Clustered vertabrates, Euclidean distance,\n complete linkage", ces.lab=1.25, xlab="Vertabrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, title="Clustered vertabrates, Manhattan distance,\n single linkage", ces.lab=1.25, xlab="Vertabrates", hang=-1, sub="")
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean distance,\n complete linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan distance,\n single linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\n Complete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\n Single Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
Ver_Manhattan<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manhattan
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
Ver_Manhattan<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\n Complete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\n Single Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggdendro)
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\n Complete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\n Single Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\n Complete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\n Single Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\n Complete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\n Single Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)
ggdendrogram(Ver_Manh_Single)
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\n Complete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\n Single Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)+labs(title="bruh")
ggdendrogram(Ver_Manh_Single)
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\n Complete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\n Single Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)+labs(title="Clustered vertabrates, Euclidean Distance,\n Complete Linkage")
ggdendrogram(Ver_Manh_Single) + labs(title="Clustered vertabrates, Manhattan Distance,\n Single Linkage", x="Vertebrates")
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\nComplete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\nSingle Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)+labs(title="Clustered vertabrates, Euclidean Distance,\nComplete Linkage")
ggdendrogram(Ver_Manh_Single) + labs(title="Clustered vertabrates, Manhattan Distance,\nSingle Linkage", xlab="Vertebrates")
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\nComplete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\nSingle Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)+labs(title="Clustered vertabrates, Euclidean Distance,\nComplete Linkage")+xlab("Vertebrates")
ggdendrogram(Ver_Manh_Single) + labs(title="Clustered vertabrates, Manhattan Distance,\nSingle Linkage")+xlab("Vertebrates")
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\nComplete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\nSingle Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)+labs(title="Clustered vertabrates, Euclidean Distance,\nComplete Linkage")
ggdendrogram(Ver_Manh_Single) + labs(title="Clustered vertabrates, Manhattan Distance,\nSingle Linkage", x="Vertebrates")
Ver_Euclidean<-as.matrix(dist(vertebrate[,2:7]))
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
#Ver_Euclidean
Ver_Eucl_Complete = hclust(as.dist(Ver_Euclidean), method="complete")
Ver_Eucl_Complete
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:7]))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:7]))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manhattan
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:7]))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\nComplete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\nSingle Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
#bonus redo with ggdendro
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)+labs(title="Clustered vertabrates, Euclidean Distance,\nComplete Linkage")
ggdendrogram(Ver_Manh_Single) + labs(title="Clustered vertabrates, Manhattan Distance,\nSingle Linkage")
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:7], method="manhattan"))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\nComplete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
plot(Ver_Manh_Single, lwd=3, main="Clustered vertabrates, Manhattan Distance,\nSingle Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
#bonus redo with ggdendro
library(ggplot2)
library(ggdendro)
ggdendrogram(Ver_Eucl_Complete)+labs(title="Clustered vertabrates, Euclidean Distance,\nComplete Linkage")
ggdendrogram(Ver_Manh_Single) + labs(title="Clustered vertabrates, Manhattan Distance,\nSingle Linkage")
Ver_Euclidean<-as.matrix(dist(vertebrate[,2:7]), method="euclidean") #omit 1st and 8th columns, contain text
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Eucl_Complete = hclust(as.dist(Ver_Euclidean), method="complete")
Ver_Eucl_Complete
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:7], method="manhattan"))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manhattan
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:8], method="manhattan"))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:8], method="manhattan"))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manhattan
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
Ver_Manhattan<-as.matrix(dist(vertebrate[,2:7], method="manhattan"))
rownames(Ver_Manhattan)=vertebrate[,1]
colnames(Ver_Manhattan)=vertebrate[,1]
Ver_Manh_Single = hclust(as.dist(Ver_Manhattan), method="single")
Ver_Manh_Single
Ver_Euclidean<-as.matrix(dist(vertebrate[,2:7]), method="euclidean") #omit 1st and 8th columns, contain text
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Eucl_Complete = hclust(as.dist(Ver_Euclidean), method="single")
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\nComplete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
Ver_Euclidean<-as.matrix(dist(vertebrate[,2:7]), method="euclidean") #omit 1st and 8th columns, contain text
rownames(Ver_Euclidean)=vertebrate[,1]
colnames(Ver_Euclidean)=vertebrate[,1]
Ver_Eucl_Complete = hclust(as.dist(Ver_Euclidean), method="complete")
plot(Ver_Eucl_Complete, lwd=3, main="Clustered vertabrates, Euclidean Distance,\nComplete Linkage", cex.lab=1.25, xlab="Vertebrates", hang=-1, sub="")
graph1 <- ggplot(MMtable_k3)+geom_boxplot(aes(Water))
library(tidyverse)
graph1 <- ggplot(MMtable_k3)+geom_boxplot(aes(Water))
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyverse)
Mammals_Milk<-read.csv("Milk_Composition.csv",header=T,row.names=1)
head(Mammals_Milk)
summary(Mammals_Milk)
Mammals_Milk_Std<-round(scale(Mammals_Milk),2)
head(Mammals_Milk_Std)
dist_animals = dist(Mammals_Milk_Std, method = "euclidean")
h_animals = hclust(dist_animals, method="complete")
plot(h_animals, lwd=3, cex.lab=1.25, main="Mammals Clustered by Std. Milk Composition \n Euclidean Metric, Complete Linkage", hang=-1, xlab="Mammals", sub="", frame.plot=T)
set.seed(125)
MMilk_km_3 = kmeans(Mammals_Milk_Std, centers=3, nstart=100)
MMilk_km_4 = kmeans(Mammals_Milk_Std, centers=4, nstart=100)
Mammals_Milk = mutate(as.data.frame(Mammals_Milk), km_3=MMilk_km_3$cluster)
Mammals_Milk = mutate(as.data.frame(Mammals_Milk), km_4=MMilk_km_4$cluster)
MMtable_k3=arrange(Mammals_Milk, km_3)
MMtable_k4=arrange(Mammals_Milk, km_4)
print(MMtable_k3)
print(MMtable_k4)
MMilk_Agg_K3 = round(summarize(group_by(MMtable_k3, km_3), Count=n(),
Mean_Water=mean(Water),
Mean_Protein=mean(Protein),
Mean_Fat=mean(Fat),
Mean_Lactose=mean(Lactose),
Mean_Ash=mean(Ash)), 2)
MMilk_Agg_K4 = round(summarize(group_by(MMtable_k4, km_4), Count=n(),
Mean_Water=mean(Water),
Mean_Protein=mean(Protein),
Mean_Fat=mean(Fat),
Mean_Lactose=mean(Lactose),
Mean_Ash=mean(Ash)), 2)
MMilk_Agg_K3
MMilk_Agg_K4
graph1 <- ggplot(MMtable_k3)+geom_boxplot(aes(Water))
require(cowplot)
graph1 <- ggplot(MMtable_k3)+geom_boxplot(aes(Water))
graph2 <- ggplot(MMtable_k3)+geom_boxplot(aes(Protein))
graph3 <- ggplot(MMtable_k3)+geom_boxplot(aes(Fat))
graph4 <- ggplot(MMtable_k3)+geom_boxplot(aes(Lactose))
graph5 <- ggplot(MMtable_k3)+geom_boxplot(aes(Ash))
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
require(cowplot)
library(cowplot)
install.packages("cowplot")
require(cowplot)
graph1 <- ggplot(MMtable_k3)+geom_boxplot(aes(Water))
graph2 <- ggplot(MMtable_k3)+geom_boxplot(aes(Protein))
graph3 <- ggplot(MMtable_k3)+geom_boxplot(aes(Fat))
graph4 <- ggplot(MMtable_k3)+geom_boxplot(aes(Lactose))
graph5 <- ggplot(MMtable_k3)+geom_boxplot(aes(Ash))
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
require(cowplot)
graph1 <- ggplot(MMtable_k3)+geom_boxplot(aes(Water))
graph2 <- ggplot(MMtable_k3)+geom_boxplot(aes(Protein))
graph3 <- ggplot(MMtable_k3)+geom_boxplot(aes(Fat))
graph4 <- ggplot(MMtable_k3)+geom_boxplot(aes(Lactose))
graph5 <- ggplot(MMtable_k3)+geom_boxplot(aes(Ash))
plot_grid(graph1, graph2, graph3, graph4, graph5, labels = "AUTO")
WGSSs = list()
for (i in 1:8){
WGSSs.append(kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
WGSSs = list()
for (i in 1:8){
WGSSs.append(WGSSs, kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
WGSSs = list()
for (i in 1:8){
WGSSs=append(WGSSs, kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
WGSSs = list()
for (i in 1:8){
WGSSs=append(WGSSs, kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
plot(c(1:8),wgss,type="b",pch=16,cex=1.3,ylim=c(0,100), xlab="Number of Groups",ylab="WGSS")
WGSSs = list()
for (i in 1:8){
WGSSs=append(WGSSs, kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
plot(c(1:8),WGSSs,type="b",pch=16,cex=1.3,ylim=c(0,100), xlab="Number of Groups",ylab="WGSS")
WGSSs = list()
for (i in 1:8){
WGSSs=append(WGSSs, kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
plot(c(1:8),WGSSs,type="b",pch=16,cex=1.3,ylim=c(0,150), xlab="Number of Groups",ylab="WGSS")
WGSSs = list()
for (i in 1:8){
WGSSs=append(WGSSs, kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
plot(c(1:8),WGSSs,type="b",pch=16,cex=1.3,ylim=c(0,130), xlab="Number of Groups",ylab="WGSS")
WGSSs = list()
for (i in 1:8){
WGSSs=append(WGSSs, kmeans(Mammals_Milk_Std, centers=i, nstart=50)$tot.withinss)
}
plot(c(1:8),WGSSs,type="b",pch=16,cex=1.3,ylim=c(0,120), xlab="Number of Groups",ylab="WGSS")
source("C:/Users/gehmand/OneDrive - Carlisle Area School District/Desktop/Data 180 dTomGehman/DATA180/Final/final.R", echo=TRUE)
loandefaults = read.csv("loan_default_data_set.csv")
head(loandefaults)
#Question 1
#part a
dim(loandefaults)
#part b
colnames(loandefaults)
